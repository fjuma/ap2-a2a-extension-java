package io.ap2.a2a.extension.spec;

import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import io.a2a.util.Assert;

/**
 * Represents the user's purchase intent.
 * These are the initial fields utilized in the human-present flow. For
 * human-not-present flows, additional fields will be added to this mandate.
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonIgnoreProperties(ignoreUnknown = true)
public record IntentMandate(
        /**
         * If false, the agent can make purchases on the user's behalf once all
         * purchase conditions have been satisfied. This must be true if the
         * intent mandate is not signed by the user.
         */
        @JsonProperty("user_cart_confirmation_required") Boolean userCartConfirmationRequired,

        /**
         * The natural language description of the user's intent. This is
         * generated by the shopping agent, and confirmed by the user. The
         * goal is to have informed consent by the user.
         */
        @JsonProperty("natural_language_description") String naturalLanguageDescription,

        /**
         * Merchants allowed to fulfill the intent. If not set, the shopping
         * agent is able to work with any suitable merchant.
         */
        List<String> merchants,

        /**
         * A list of specific product SKUs. If not set, any SKU is allowed.
         */
        List<String> skus,

        /**
         * If true, items must be refundable.
         */
        @JsonProperty("requires_refundability") Boolean requiresRefundability,

        /**
         * When the intent mandate expires, in ISO 8601 format.
         */
        @JsonProperty("intent_expiry") String intentExpiry
) {

    public IntentMandate {
        Assert.checkNotNullParam("naturalLanguageDescription", naturalLanguageDescription);
        if (userCartConfirmationRequired == null) {
            userCartConfirmationRequired = true;
        }
        if (requiresRefundability == null) {
            requiresRefundability = false;
        }
    }
}